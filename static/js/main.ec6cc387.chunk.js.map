{"version":3,"sources":["contexts/colorModeContext.ts","actions/types.ts","actions/alertActions.ts","constants.ts","services/authService.ts","browserHistory.ts","actions/authActions.ts","components/NavProvider.tsx","themes/index.ts","components/ColorModeProvider.tsx","components/Login.tsx","services/itemService.ts","actions/itemActions.ts","components/ItemTable.tsx","components/Dashboard.tsx","components/PrivateRoute.tsx","components/Landing.tsx","services/clientService.ts","actions/clientActions.ts","components/Clients.tsx","components/Items.tsx","components/ItemPage.tsx","App.tsx","reportWebVitals.ts","reducers/alertReducer.ts","reducers/authReducer.ts","reducers/itemReducer.ts","reducers/index.ts","reducers/clientReducer.ts","store/index.ts","index.tsx"],"names":["ColorModes","ColorModeContext","createContext","mode","toggleColorMode","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","ALERT_SUCCESS","ALERT_ERROR","ALERT_CLEAR","CLIENTS_GETALL_REQUEST","CLIENTS_GETALL_SUCCESS","CLIENTS_GETALL_FAILURE","ITEMS_GETALL_REQUEST","ITEMS_GETALL_SUCCESS","ITEMS_GETALL_FAILURE","ITEM_GET_REQUEST","ITEM_GET_SUCCESS","ITEM_GET_FAILURE","ITEMS_ADD_REQUEST","ITEMS_ADD_SUCCESS","ITEMS_ADD_FAILURE","ITEMS_DELETE_REQUEST","ITEMS_DELETE_SUCCESS","ITEMS_DELETE_FAILURE","alertActions","message","type","constants","API_BASE_URL","USER_LOCAL_STORAGE_KEY","COLOR_MODE_LOCALE_STORAGE_KEY","checkResponse","response","text","then","data","JSON","parse","ok","status","logout","window","location","reload","error","statusText","Promise","reject","localStorage","removeItem","authService","authHeader","user","getItem","token","login","email","password","fetch","method","headers","body","stringify","setItem","history","createBrowserHistory","authActions","dispatch","success","push","Error","failure","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","padding","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","LoggedOutList","List","ListItem","component","Link","to","button","ListItemIcon","ListItemText","primary","LoggedInList","useDispatch","onClick","connect","state","auth","children","useState","setOpen","useContext","Box","sx","CssBaseline","position","Toolbar","IconButton","color","edge","marginRight","Grid","direction","container","item","Typography","variant","noWrap","role","Divider","flexGrow","p","values","xs","sm","md","lg","xl","components","MuiButton","defaultProps","disableElevation","styleOverrides","root","textTransform","sizeSmall","sizeMedium","sizeLarge","textSizeSmall","textSizeMedium","textSizeLarge","MuiCardContent","paddingBottom","MuiCardHeader","titleTypographyProps","subheaderTypographyProps","MuiCssBaseline","margin","html","MozOsxFontSmoothing","WebkitFontSmoothing","flexDirection","minHeight","flex","height","MuiOutlinedInput","notchedOutline","borderColor","MuiTableHead","backgroundColor","borderBottom","fontSize","fontWeight","lineHeight","letterSpacing","paddingTop","palette","action","active","focus","hover","selected","disabledBackground","disabled","background","default","paper","divider","main","light","dark","contrastText","secondary","info","warning","shape","borderRadius","shadows","typography","fontFamily","body1","body2","subtitle1","subtitle2","overline","caption","h1","h2","h3","h4","h5","h6","ColorModeProvider","darkModePref","useMediaQuery","setMode","useEffect","storedMode","includes","console","debug","useMemo","createTheme","themeJson","Provider","value","newMode","ThemeProvider","loggedIn","Container","maxWidth","onSubmit","evt","preventDefault","Object","fromEntries","FormData","currentTarget","entries","toString","my","gutterBottom","TextField","label","name","fullWidth","py","ml","Button","size","loggingIn","LinearProgress","getItems","a","items","itemId","itemService","insertItem","deleteItem","itemActions","ItemQuantityChip","quantity","Chip","style","orderingByPrice","setOrderingByPrice","itemList","loading","CircularProgress","sort","b","price","ean","Card","CardHeader","title","maxHeight","Table","TableHead","TableRow","TableCell","TableSortLabel","TableBody","map","Tooltip","description","Avatar","src","photo","alt","supplierId","clients","PrivateRoute","Component","props","render","pathname","from","Landing","getClients","clientService","clientActions","length","TableContainer","Paper","minWidth","align","client","border","id","firstName","lastName","city","zipCode","useParams","parseInt","find","i","alert","snackbarOpen","setSnackbarOpen","listen","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","path","exact","Login","Dashboard","Clients","Items","ItemPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultAlertState","initialState","keys","defaultItemState","combineReducers","filter","store","createStore","baseReducer","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec6cc387.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const ColorModes = [\"light\", \"dark\"] as const;\nexport type ColorMode = typeof ColorModes[number];\n\ninterface IColorModeContext {\n  mode: ColorMode;\n  toggleColorMode: () => void;\n}\nexport const ColorModeContext = createContext<IColorModeContext>({\n  mode: \"light\",\n  toggleColorMode: () => { /* empty */ }\n});\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const ALERT_SUCCESS = \"ALERT_SUCCESS\";\nexport const ALERT_ERROR = \"ALERT_ERROR\";\nexport const ALERT_CLEAR = \"ALERT_CLEAR\";\n\nexport const CLIENTS_GETALL_REQUEST = \"CLIENTS_GETALL_REQUEST\";\nexport const CLIENTS_GETALL_SUCCESS = \"CLIENTS_GETALL_SUCCESS\";\nexport const CLIENTS_GETALL_FAILURE = \"CLIENTS_GETALL_FAILURE\";\n\nexport const ITEMS_GETALL_REQUEST = \"ITEMS_GETALL_REQUEST\";\nexport const ITEMS_GETALL_SUCCESS = \"ITEMS_GETALL_SUCCESS\";\nexport const ITEMS_GETALL_FAILURE = \"ITEMS_GETALL_FAILURE\";\nexport const ITEM_GET_REQUEST = \"ITEM_GET_REQUEST\";\nexport const ITEM_GET_SUCCESS = \"ITEM_GET_SUCCESS\";\nexport const ITEM_GET_FAILURE = \"ITEM_GET_FAILURE\";\nexport const ITEMS_ADD_REQUEST = \"ITEMS_ADD_REQUEST\";\nexport const ITEMS_ADD_SUCCESS = \"ITEMS_ADD_SUCCESS\";\nexport const ITEMS_ADD_FAILURE = \"ITEMS_ADD_FAILURE\";\nexport const ITEMS_DELETE_REQUEST = \"ITEMS_DELETE_REQUEST\";\nexport const ITEMS_DELETE_SUCCESS = \"ITEMS_DELETE_SUCCESS\";\nexport const ITEMS_DELETE_FAILURE = \"ITEMS_DELETE_FAILURE\";\n","import { AnyAction } from \"redux\";\nimport { ALERT_CLEAR, ALERT_ERROR, ALERT_SUCCESS } from \"./types\";\n\nexport const alertActions = {\n  success: (message: string): AnyAction => ({ type: ALERT_SUCCESS, message }),\n  error: (message: string): AnyAction => ({ type: ALERT_ERROR, message }),\n  clear: (): AnyAction => ({ type: ALERT_CLEAR, message: \"\" })\n};\n","const constants = {\n  API_BASE_URL: \"https://back-end-integrationapplication.azurewebsites.net/\",\n  USER_LOCAL_STORAGE_KEY: \"stock_user\",\n  COLOR_MODE_LOCALE_STORAGE_KEY: \"stock_color_mode\",\n};\n\nexport default constants;\n","import constants from \"../constants\";\n\nexport interface User {\n  role?: string;\n  token?: string;\n  email?: string;\n}\n\nexport interface AuthorizationHeader {\n  Authorization?: string;\n}\n\nconst authHeader = (): AuthorizationHeader => {\n  const user: User = JSON.parse(\n    localStorage.getItem(constants.USER_LOCAL_STORAGE_KEY) ?? \"{}\"\n  );\n  if (user?.token) {\n    return { \"Authorization\": `Bearer ${user.token}` };\n  }\n  return {};\n};\n\nconst login = (email: string, password: string): Promise<User> => {\n  return fetch(`${constants.API_BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse)\n    .then(data => {\n      const user = data as User;\n      localStorage.setItem(\n        constants.USER_LOCAL_STORAGE_KEY,\n        JSON.stringify({ email, ...user })\n      );\n      return user;\n    });\n};\n\nconst checkResponse = (response: Response): Promise<unknown> => {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        logout();\n        window.location.reload();\n      }\n      const error = data?.message || response.statusText;\n      return Promise.reject(error);\n    }\n    return data;\n  });\n};\n\nconst logout = (): void => {\n  localStorage.removeItem(constants.USER_LOCAL_STORAGE_KEY);\n};\n\nexport const authService = {\n  authHeader,\n  login,\n  logout,\n  checkResponse,\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import { alertActions } from \"./alertActions\";\nimport { authService, User } from \"../services/authService\";\nimport {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT\n} from \"./types\";\nimport { history } from \"../browserHistory\";\nimport { AppDispatch } from \"../store\";\nimport { AnyAction } from \"redux\";\n\nconst login = (email: string, password: string): (dispatch: AppDispatch) => void => {\n  \n  const request = (user: User) => ({ type: LOGIN_REQUEST, user });\n  const success = (user: User) => ({ type: LOGIN_SUCCESS, user });\n  const failure = (error: string) => ({ type: LOGIN_FAILURE, error });\n\n  return (dispatch: AppDispatch) => {\n    dispatch(request({ email }));\n    authService\n      .login(email, password)\n      .then((user: User) => {\n        dispatch(success({ email, ...user }));  \n        history.push(\"/dashboard\");\n      }, (error: (string | Error)) => {\n        const message = error instanceof Error ? error.message : error;\n        dispatch(failure(message));\n        dispatch(alertActions.error(`Impossible de se connecter : ${message}`));\n      });\n  };\n};\n\nconst logout = (): AnyAction => {\n  authService.logout();\n  return { type: LOGOUT };\n};\n\nexport const authActions = {\n  login,\n  logout,\n};\n","import React, { useContext, useState } from \"react\";\nimport { styled, Theme, CSSObject } from \"@mui/material/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport {\n  Grid,\n  Toolbar,\n  List,\n  CssBaseline,\n  Typography,\n  Divider,\n  IconButton\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport CategoryIcon from \"@mui/icons-material/Category\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport { ColorModeContext } from \"../contexts/colorModeContext\";\nimport { Link } from \"react-router-dom\";\nimport { authActions } from \"../actions/authActions\";\nimport constants from \"../constants\";\nimport { history } from \"../browserHistory\";\nimport { AppDispatch } from \"../store\";\nimport { GlobalState } from \"../reducers\";\nimport { User } from \"../services/authService\";\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== \"open\"})(\n  ({ theme, open }) => ({\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    boxSizing: \"border-box\",\n    ...(open && {\n      ...openedMixin  (theme),\n      \"& .MuiDrawer-paper\": openedMixin(theme),\n    }),\n    ...(!open && {\n      ...closedMixin(theme),\n      \"& .MuiDrawer-paper\": closedMixin(theme),\n    }),\n  }),\n);\n\nconst LoggedOutList = () => {\n  return (\n    <List>\n      <ListItem \n        component={Link} \n        to=\"/\"\n        button \n      >\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Accueil\" />\n      </ListItem>\n      <ListItem \n        component={Link} \n        to=\"/login\"\n        button \n      >\n        <ListItemIcon>\n          <LoginIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Se connecter\" />\n      </ListItem>\n    </List>\n  );\n};\n\nconst LoggedInList: React.FC = () => {\n  const dispatch = useDispatch();\n  \n  const handleLogout = () => {\n    dispatch(authActions.logout());\n    history.push(\"/\");\n  };\n\n  return (\n    <List>\n      <ListItem \n        component={Link} \n        to=\"/\"\n        button \n      >\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Accueil\" />\n      </ListItem>\n      <ListItem \n        component={Link} \n        to=\"/dashboard\"\n        button \n      >\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tableau de bord\" />\n      </ListItem>\n      <ListItem \n        component={Link} \n        to=\"/clients\"\n        button \n      >\n        <ListItemIcon>\n          <PeopleAltIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Clients\" />\n      </ListItem>\n      <ListItem \n        component={Link} \n        to=\"/items\"\n        button \n      >\n        <ListItemIcon>\n          <CategoryIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Objets\" />\n      </ListItem>\n      <ListItem\n        onClick={handleLogout}\n        button \n      >\n        <ListItemIcon>\n          <LogoutIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Se déconnecter\" />\n      </ListItem>\n    </List>\n  );\n};\n\ntype NavProviderProps = {\n  dispatch: AppDispatch;\n  user?: User;\n}\nconst NavProvider: React.FC<NavProviderProps> = ({\n  children,\n  user,\n}) => {\n  const [open, setOpen] = useState(false);\n  const { mode, toggleColorMode } = useContext(ColorModeContext);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: \"36px\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Grid\n            direction=\"row\"\n            justifyContent=\"space-between\"        \n            container\n          >\n            <Grid item>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                Gestion des stocks\n              </Typography>\n            </Grid>\n            {user?.email && user?.role\n              ?\n              <Grid item>\n                <Typography variant=\"body2\" component=\"div\">\n                  Connecté en tant que {user.email} ({user.role})\n                </Typography>\n              </Grid>\n              : null}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        {localStorage.getItem(constants.USER_LOCAL_STORAGE_KEY)\n          ? <LoggedInList />\n          : <LoggedOutList />\n        }\n        <Divider />\n        <List>\n          <ListItem button onClick={toggleColorMode}>\n            <ListItemIcon>\n              {mode === \"light\" ? <DarkModeIcon /> : <LightModeIcon />}\n            </ListItemIcon>\n            <ListItemText primary=\"Changer le mode\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <DrawerHeader />\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { auth } = state;\n  const { user } = auth;\n  return {\n    user,\n  };\n};\n\nexport default connect(mapStateToProps)(NavProvider);\n","import { ThemeOptions } from \"@mui/material\";\n\n// TODO : modifier la couleur du background\n// (pas totalement noir/blanc)\nexport const theme: ThemeOptions = {\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 1000,\n      lg: 1200,\n      xl: 1920\n    }\n  },\n  components: {\n    MuiButton: {\n      defaultProps: {\n        disableElevation: true\n      },\n      styleOverrides: {\n        root: {\n          textTransform: \"none\"\n        },\n        sizeSmall: {\n          padding: \"6px 16px\"\n        },\n        sizeMedium: {\n          padding: \"8px 20px\"\n        },\n        sizeLarge: {\n          padding: \"11px 24px\"\n        },\n        textSizeSmall: {\n          padding: \"7px 12px\"\n        },\n        textSizeMedium: {\n          padding: \"9px 16px\"\n        },\n        textSizeLarge: {\n          padding: \"12px 16px\"\n        }\n      }\n    },\n    MuiCardContent: {\n      styleOverrides: {\n        root: {\n          padding: \"32px 24px\",\n          \"&:last-child\": {\n            paddingBottom: \"32px\"\n          }\n        }\n      }\n    },\n    MuiCardHeader: {\n      defaultProps: {\n        titleTypographyProps: {\n          variant: \"h6\"\n        },\n        subheaderTypographyProps: {\n          variant: \"body2\"\n        }\n      },\n      styleOverrides: {\n        root: {\n          padding: \"32px 24px\"\n        }\n      }\n    },\n    MuiCssBaseline: {\n      styleOverrides: {\n        \"*\": {\n          boxSizing: \"border-box\",\n          margin: 0,\n          padding: 0\n        },\n        html: {\n          MozOsxFontSmoothing: \"grayscale\",\n          WebkitFontSmoothing: \"antialiased\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          minHeight: \"100%\",\n          width: \"100%\"\n        },\n        body: {\n          display: \"flex\",\n          flex: \"1 1 auto\",\n          flexDirection: \"column\",\n          minHeight: \"100%\",\n          width: \"100%\"\n        },\n        \"#__next\": {\n          display: \"flex\",\n          flex: \"1 1 auto\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderColor: \"#E6E8F0\"\n        }\n      }\n    },\n    MuiTableHead: {\n      styleOverrides: {\n        root: {\n          backgroundColor: \"#F3F4F6\",\n          \".MuiTableCell-root\": {\n            color: \"#374151\"\n          },\n          borderBottom: \"none\",\n          \"& .MuiTableCell-root\": {\n            borderBottom: \"none\",\n            fontSize: \"12px\",\n            fontWeight: 600,\n            lineHeight: 1,\n            letterSpacing: 0.5,\n            textTransform: \"uppercase\"\n          },\n          \"& .MuiTableCell-paddingCheckbox\": {\n            paddingTop: 4,\n            paddingBottom: 4\n          }\n        }\n      }\n    }\n  },\n  palette: {\n    action: {\n      active: \"#6B7280\",\n      focus: \"rgba(55, 65, 81, 0.12)\",\n      hover: \"rgba(55, 65, 81, 0.04)\",\n      selected: \"rgba(55, 65, 81, 0.08)\",\n      disabledBackground: \"rgba(55, 65, 81, 0.12)\",\n      disabled: \"rgba(55, 65, 81, 0.26)\"\n    },\n    background: {\n      default: \"#F9FAFC\",\n      paper: \"#FFFFFF\"\n    },\n    divider: \"#E6E8F0\",\n    primary: {\n      main: \"#5048E5\",\n      light: \"#828DF8\",\n      dark: \"#3832A0\",\n      contrastText: \"#FFFFFF\"\n    },\n    secondary: {\n      main: \"#10B981\",\n      light: \"#3FC79A\",\n      dark: \"#0B815A\",\n      contrastText: \"#FFFFFF\"\n    },\n    success: {\n      main: \"#14B8A6\",\n      light: \"#43C6B7\",\n      dark: \"#0E8074\",\n      contrastText: \"#FFFFFF\"\n    },\n    info: {\n      main: \"#2196F3\",\n      light: \"#64B6F7\",\n      dark: \"#0B79D0\",\n      contrastText: \"#FFFFFF\"\n    },\n    warning: {\n      main: \"#FFB020\",\n      light: \"#FFBF4C\",\n      dark: \"#B27B16\",\n      contrastText: \"#FFFFFF\"\n    },\n    error: {\n      main: \"#D14343\",\n      light: \"#DA6868\",\n      dark: \"#922E2E\",\n      contrastText: \"#FFFFFF\"\n    },\n    text: {\n      primary: \"#121828\",\n      secondary: \"#65748B\",\n      disabled: \"rgba(55, 65, 81, 0.48)\"\n    }\n  },\n  shape: {\n    borderRadius: 8\n  },\n  shadows: [\n    \"none\",\n    \"0px 1px 1px rgba(100, 116, 139, 0.06), 0px 1px 2px rgba(100, 116, 139, 0.1)\",\n    \"0px 1px 2px rgba(100, 116, 139, 0.12)\",\n    \"0px 1px 4px rgba(100, 116, 139, 0.12)\",\n    \"0px 1px 5px rgba(100, 116, 139, 0.12)\",\n    \"0px 1px 6px rgba(100, 116, 139, 0.12)\",\n    \"0px 2px 6px rgba(100, 116, 139, 0.12)\",\n    \"0px 3px 6px rgba(100, 116, 139, 0.12)\",\n    \"0px 2px 4px rgba(31, 41, 55, 0.06), 0px 4px 6px rgba(100, 116, 139, 0.12)\",\n    \"0px 5px 12px rgba(100, 116, 139, 0.12)\",\n    \"0px 5px 14px rgba(100, 116, 139, 0.12)\",\n    \"0px 5px 15px rgba(100, 116, 139, 0.12)\",\n    \"0px 6px 15px rgba(100, 116, 139, 0.12)\",\n    \"0px 7px 15px rgba(100, 116, 139, 0.12)\",\n    \"0px 8px 15px rgba(100, 116, 139, 0.12)\",\n    \"0px 9px 15px rgba(100, 116, 139, 0.12)\",\n    \"0px 10px 15px rgba(100, 116, 139, 0.12)\",\n    \"0px 12px 22px -8px rgba(100, 116, 139, 0.25)\",\n    \"0px 13px 22px -8px rgba(100, 116, 139, 0.25)\",\n    \"0px 14px 24px -8px rgba(100, 116, 139, 0.25)\",\n    \"0px 10px 10px rgba(31, 41, 55, 0.04), 0px 20px 25px rgba(31, 41, 55, 0.1)\",\n    \"0px 25px 50px rgba(100, 116, 139, 0.25)\",\n    \"0px 25px 50px rgba(100, 116, 139, 0.25)\",\n    \"0px 25px 50px rgba(100, 116, 139, 0.25)\",\n    \"0px 25px 50px rgba(100, 116, 139, 0.25)\"\n  ],\n  typography: {\n    button: {\n      fontWeight: 600\n    },\n    fontFamily: \"\\\"Inter\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\"\",\n    body1: {\n      fontSize: \"1rem\",\n      fontWeight: 400,\n      lineHeight: 1.5\n    },\n    body2: {\n      fontSize: \"0.875rem\",\n      fontWeight: 400,\n      lineHeight: 1.57\n    },\n    subtitle1: {\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      lineHeight: 1.75\n    },\n    subtitle2: {\n      fontSize: \"0.875rem\",\n      fontWeight: 500,\n      lineHeight: 1.57\n    },\n    overline: {\n      fontSize: \"0.75rem\",\n      fontWeight: 600,\n      letterSpacing: \"0.5px\",\n      lineHeight: 2.5,\n      textTransform: \"uppercase\"\n    },\n    caption: {\n      fontSize: \"0.75rem\",\n      fontWeight: 400,\n      lineHeight: 1.66\n    },\n    h1: {\n      fontWeight: 700,\n      fontSize: \"3.5rem\",\n      lineHeight: 1.375\n    },\n    h2: {\n      fontWeight: 700,\n      fontSize: \"3rem\",\n      lineHeight: 1.375\n    },\n    h3: {\n      fontWeight: 700,\n      fontSize: \"2.25rem\",\n      lineHeight: 1.375\n    },\n    h4: {\n      fontWeight: 700,\n      fontSize: \"2rem\",\n      lineHeight: 1.375\n    },\n    h5: {\n      fontWeight: 600,\n      fontSize: \"1.5rem\",\n      lineHeight: 1.375\n    },\n    h6: {\n      fontWeight: 600,\n      fontSize: \"1.125rem\",\n      lineHeight: 1.375\n    }\n  }\n};\n","import { createTheme, ThemeProvider, useMediaQuery } from \"@mui/material\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport constants from \"../constants\";\nimport {\n  ColorMode,\n  ColorModeContext,\n  ColorModes\n} from \"../contexts/colorModeContext\";\nimport { theme as themeJson } from \"../themes\";\n\nconst ColorModeProvider: React.FC = ({ children }) => {\n  const darkModePref = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [mode, setMode] = useState<ColorMode>(darkModePref ? \"dark\" : \"light\");\n  \n  const toggleColorMode = () => {\n    const newMode = mode === \"light\" ? \"dark\" : \"light\";\n    setMode(newMode);\n    localStorage.setItem(constants.COLOR_MODE_LOCALE_STORAGE_KEY, newMode);\n  };\n\n  useEffect(() => {\n    try {\n      const storedMode = localStorage.getItem(constants.COLOR_MODE_LOCALE_STORAGE_KEY) as ColorMode;\n      if (storedMode && ColorModes.includes(storedMode)) {\n        console.debug(\"Set color mode from local storage\");\n        setMode(storedMode);\n      }\n    } catch (error) {\n      console.error(`Could not retrieve color mode from local storage: \n                    ${(error as Error).message}`);\n    }\n  }, []);\n  \n  const theme = useMemo(() => {\n    return createTheme(\n      {...themeJson, ...{palette: {mode}}}\n    );\n  }, [mode]);\n\n  return (\n    <ColorModeContext.Provider value={{mode, toggleColorMode}}>\n      <ThemeProvider theme={theme}>\n        {children}\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n\nexport default ColorModeProvider;\n","import {\n  Box,\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography\n} from \"@mui/material\";\nimport React from \"react\";\nimport { LinearProgress } from \"@mui/material\";\nimport { connect } from \"react-redux\";\nimport { authActions } from \"../actions/authActions\";\nimport { GlobalState } from \"../reducers\";\nimport { AppDispatch } from \"../store\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserState } from \"../reducers/authReducer\";\n\ntype LoginProps = {\n  dispatch: AppDispatch;\n  auth: UserState;\n}\nconst Login: React.FC<LoginProps> = ({\n  dispatch,\n  auth,\n}) => {\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const { email, password } = Object.fromEntries(\n      new FormData(evt.currentTarget).entries()\n    );\n    authActions.login(email.toString(), password.toString())(dispatch);\n  };\n\n  if (auth.loggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexGrow: 1,\n        minHeight: \"100%\",\n        alignItems: \"center\",\n      }}\n    >\n      <Container\n        maxWidth=\"sm\"\n      >\n        <form\n          onSubmit={handleSubmit}\n        >\n          <Box\n            sx={{\n              my: 3\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              Se connecter\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n              gutterBottom\n            >\n              Se connecter au système\n              de gestion des stocks\n            </Typography>\n          </Box>\n          <Grid\n            spacing={3}\n            container\n          >\n            <TextField\n              type=\"email\"\n              label=\"Adresse e-mail\"\n              margin=\"normal\"\n              name=\"email\"\n              fullWidth\n            />\n            <TextField\n              type=\"password\"\n              label=\"Mot de passe\"\n              margin=\"normal\"\n              name=\"password\"\n              fullWidth\n            />\n          </Grid>\n          <Box\n            sx={{\n              py: 2,\n              ml: -3\n            }}\n          >\n            <Button\n              type=\"submit\"\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n            >\n              Se connecter\n            </Button>\n            {auth.loggingIn\n              ? (\n                <Box sx={{ width: \"100%\", my: 3 }}>\n                  <LinearProgress />\n                </Box>\n              )\n              : null\n            }\n          </Box>\n        </form>\n      </Container>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { auth } = state;\n  return { auth };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import constants from \"../constants\";\nimport { authService } from \"./authService\";\n\nexport interface Item {\n  ean: number;\n  name: string;\n  price: number;\n  description: string;\n  photo: string;\n  supplierId: number;\n}\n\nconst getItems = async (): Promise<Item[]> => {\n  const items = await fetch(`${constants.API_BASE_URL}/items`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authService.authHeader(),\n    },\n  }).then(authService.checkResponse);\n  \n  return items as Item[];\n};\n\nconst getItem = async (itemId: number): Promise<Item> => {\n  const item = await fetch(`${constants.API_BASE_URL}/items/${itemId}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authService.authHeader(),\n    },\n  }).then(authService.checkResponse);\n\n  return item as Item;\n};\n\nconst insertItem = (item: Item): Promise<Item> => {\n  return fetch(`${constants.API_BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authService.authHeader(),\n    },\n    body: JSON.stringify(item),\n  }).then(authService.checkResponse)\n    .then(data => {\n      return data as Item;\n    });\n};\n \nconst deleteItem = (itemId: number): Promise<string> => {\n  return fetch(`${constants.API_BASE_URL}/login/${itemId}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authService.authHeader(),\n    },\n  }).then(authService.checkResponse)\n    .then(data => {\n      return data as string;\n    });\n};\n\nexport const itemService = {\n  getItems,\n  getItem,\n  insertItem,\n  deleteItem,\n};\n","import { itemService } from \"../services/itemService\";\nimport { Item } from \"../services/itemService\";\nimport { AppDispatch } from \"../store\";\nimport { alertActions } from \"./alertActions\";\nimport {\n  ITEMS_ADD_FAILURE,\n  ITEMS_ADD_REQUEST,\n  ITEMS_ADD_SUCCESS,\n  ITEMS_DELETE_FAILURE,\n  ITEMS_DELETE_REQUEST,\n  ITEMS_DELETE_SUCCESS,\n  ITEMS_GETALL_FAILURE,\n  ITEMS_GETALL_REQUEST,\n  ITEMS_GETALL_SUCCESS,\n  ITEM_GET_FAILURE,\n  ITEM_GET_REQUEST,\n  ITEM_GET_SUCCESS\n} from \"./types\";\n\nconst getAll = (): (dispatch: AppDispatch) => void => {\n\n  const request = () => ({ type: ITEMS_GETALL_REQUEST });\n  const success = (items: Item[]) => ({ type: ITEMS_GETALL_SUCCESS, items });\n  const failure = (error: string) => ({ type: ITEMS_GETALL_FAILURE, error });\n\n  return (dispatch: AppDispatch) => {\n    dispatch(request());\n    itemService\n      .getItems()\n      .then((items: Item[]) => {\n        dispatch(success(items));\n      }, (error: string) => {\n        dispatch(failure(error));\n      });\n  };\n};\n\nconst getItem = (itemId: number): (dispatch: AppDispatch) => void => {\n\n  const request = () => ({ type: ITEM_GET_REQUEST });\n  const success = (item: Item) => ({ type: ITEM_GET_SUCCESS, item });\n  const failure = (error: string) => ({ type: ITEM_GET_FAILURE, error });\n\n  return (dispatch: AppDispatch) => {\n    dispatch(request());\n    itemService\n      .getItem(itemId)\n      .then((item: Item) => {\n        dispatch(success(item));\n      }, (error: string) => {\n        dispatch(failure(error));\n      });\n  };\n};\n  \nconst addItem = (item: Item): (dispatch: AppDispatch) => void => {\n\n  const request = () => ({ type: ITEMS_ADD_REQUEST });\n  const success = (item: Item) => ({ type: ITEMS_ADD_SUCCESS, item });\n  const failure = (error: string) => ({ type: ITEMS_ADD_FAILURE, error });\n\n  return (dispatch: AppDispatch) => {\n    dispatch(request());\n    itemService\n      .insertItem(item)\n      .then(data => {\n        dispatch(success(data));\n      }, (error: string) => {\n        dispatch(failure(error));\n        dispatch(alertActions.error(error));\n      });\n  };\n};\n\nconst deleteItem = (itemId: number): (dispatch: AppDispatch) => void => {\n\n  const request = () => ({ type: ITEMS_DELETE_REQUEST });\n  const success = (message: string) => ({ type: ITEMS_DELETE_SUCCESS, message, itemId });\n  const failure = (error: string) => ({ type: ITEMS_DELETE_FAILURE, error });\n\n  return (dispatch: AppDispatch) => {\n    dispatch(request());\n    itemService\n      .deleteItem(itemId)\n      .then(data => {\n        dispatch(success(data));\n        dispatch(alertActions.success(data));\n      }, (error: string) => {\n        dispatch(failure(error));\n        dispatch(alertActions.error(error));\n      });\n  };\n};\n\nexport const itemActions = {\n  getAll,\n  getItem,\n  addItem,\n  deleteItem,\n};\n\n ","import React, { useState, useEffect } from \"react\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Chip,\n  CircularProgress,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableSortLabel,\n  Tooltip,\n\n} from \"@mui/material\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { itemActions } from \"../actions/itemActions\";\nimport { AppDispatch } from \"../store\";\nimport { ItemState } from \"../reducers/itemReducer\";\nimport { GlobalState } from \"../reducers\";\nimport { connect } from \"react-redux\";\n\ninterface ItemQuantityChipProps {\n  quantity: number;\n}\nconst ItemQuantityChip: React.FC<ItemQuantityChipProps> = ({ quantity }) => {\n  const label = quantity == 0 ? \"Rupture ⚠️\" : quantity.toString();\n  const color = quantity == 0 ? \"secondary\" : \"primary\";\n  // TODO : ajouter une 3eme couleur si proche ?\n\n  return (\n    <Chip\n      label={label}\n      color={color}\n      variant=\"filled\"\n      style={{ marginRight: \"0.5rem\" }}\n    />\n  );\n};\n\n// TODO : description en tooltip de la ligne\n\ninterface ItemProps {\n  dispatch: AppDispatch;\n  items: ItemState;\n}\nconst ItemTable: React.FC<ItemProps> = ({\n  dispatch,\n  items,\n}) => {\n\n  // TODO : mettre un lien vers la page du produit ?\n\n  const [orderingByPrice, setOrderingByPrice] = useState(false);\n  const itemList = items.items;\n\n  const handleReorderByPrice = () => {\n    setOrderingByPrice(!orderingByPrice);\n  };\n\n  useEffect(() => {\n    itemActions.getAll()(dispatch);\n  }, []);\n\n  if (items.loading) {\n    return <CircularProgress />;\n  }\n\n  if (items.error) {\n    return <div>{items.error}</div>;\n  }\n\n  if (orderingByPrice) {\n    itemList.sort((a, b) => a.price - b.price);\n  } else {\n    itemList.sort((a, b) => a.ean - b.ean);\n  }\n\n  return (\n    <Card>\n      <CardHeader title=\"Produits disponibles\" />\n      <PerfectScrollbar>\n        <Box sx={{\n          maxHeight: 350, // TODO : ajuster la hauteur\n          maxWidth: \"100%\",\n        }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  EAN\n                </TableCell>\n                <TableCell>\n                  &nbsp;\n                </TableCell>\n                <TableCell>\n                  Nom\n                </TableCell>\n                <TableCell>\n                  <TableSortLabel\n                    active={orderingByPrice}\n                    onClick={handleReorderByPrice}\n                  >\n                    Prix\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell>\n                  Fournisseur\n                </TableCell>\n                <TableCell>\n                  Quantité\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {itemList.map(item => (\n                <Tooltip\n                  key={item.ean}\n                  title={item.description}\n                >\n                  <TableRow hover>\n                    <TableCell>\n                      {item.ean}\n                    </TableCell>\n                    <TableCell>\n                      <Avatar\n                        src={item.photo}\n                        alt={item.name}\n                        sx={{\n                          width: 40,\n                          height: 40,\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      {item.name}\n                    </TableCell>\n                    <TableCell>\n                      {item.price} €\n                    </TableCell>\n                    <TableCell>\n                      {item.supplierId}\n                    </TableCell>\n                    <TableCell>\n                      <ItemQuantityChip quantity={0} />\n                      {/* TODO : régler la vraie quantité */}\n                    </TableCell>\n                  </TableRow>\n                </Tooltip>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { items } = state;\n  return {\n    items,\n  };\n};\n\nexport default connect(mapStateToProps)(ItemTable);\n","import { Box, Container, Grid } from \"@mui/material\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { GlobalState } from \"../reducers\";\nimport { ClientState } from \"../reducers/clientReducer\";\nimport { User } from \"../services/authService\";\nimport { AppDispatch } from \"../store\";\nimport ItemTable from \"./ItemTable\";\n\ninterface DashboardProps {\n  dispatch: AppDispatch;\n  clients: ClientState;\n  user?: User \n}\nconst Dashboard: React.FC<DashboardProps> = (\n  // dispatch,\n  // clients,\n  // user,\n) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: \"1 1 auto\",\n        maxWidth: \"100%\",\n        paddingTop: \"1.5rem\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flex: \"1 1 auto\",\n          flexDirection: \"column\",\n          width: \"100%\",\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n          }}\n        >\n          <Container maxWidth={false}>\n            <Grid\n              spacing={2}\n              container\n            >\n              {/* TODO : JOUER SUR CES PARAMETRES */}\n              <Grid\n                lg={6}\n                md={6}\n                xl={3}\n                xs={12}\n                item\n              >\n                <ItemTable />\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </Box>      \n    </div>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { clients, auth } = state;\n  const { user } = auth;\n  return {\n    clients,\n    user,\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport constants from \"../constants\";\n\ntype PrivateRouteProps = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: any; //ComponentType<unknown>;\n  path: string;\n  exact: boolean;\n}\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n  ...props\n}) => {\n  return (\n    <Route\n      {...props}\n      render={props =>\n        localStorage.getItem(constants.USER_LOCAL_STORAGE_KEY)\n          ? <Component {...props} />\n          : <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location } // eslint-disable-line\n            }}\n          />\n      } \n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nconst Landing: React.FC = () => {\n  return (\n    <>Landing</>\n  );\n};\n\nexport default Landing;\n","import constants from \"../constants\";\nimport { authService } from \"./authService\";\n\nexport interface Client {\n  id: number;\n  firstName: string;\n  lastName: string;\n  city: string;\n  zipCode: number;\n}\n\nconst getClients = async (): Promise<Client[]> => {\n  const clients = await fetch(`${constants.API_BASE_URL}/clients`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authService.authHeader(),\n    },\n    method: \"GET\",\n  }).then(authService.checkResponse);\n  \n  return clients as Client[];\n};\n\nexport const clientService = {\n  getClients,\n};\n","import {\n  CLIENTS_GETALL_FAILURE,\n  CLIENTS_GETALL_SUCCESS,\n  CLIENTS_GETALL_REQUEST,\n} from \"./types\";\nimport { Client, clientService } from \"../services/clientService\";\nimport { AppDispatch } from \"../store\";\n\nconst getAll = (): (dispatch: AppDispatch) => void => {\n\n  const request = () => ({ type: CLIENTS_GETALL_REQUEST });\n  const success = (clients: Client[]) => ({ type: CLIENTS_GETALL_SUCCESS, clients });\n  const failure = (error: string) => ({ type: CLIENTS_GETALL_FAILURE, error });\n\n  return (dispatch: AppDispatch) => {\n    dispatch(request());\n    clientService\n      .getClients()\n      .then((clients: Client[]) => {\n        dispatch(success(clients));\n      }, (error: string) => {\n        dispatch(failure(error));\n      });\n  };\n};\n\nexport const clientActions = {\n  getAll,\n};\n","import React, { useEffect } from \"react\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport { clientActions } from \"../actions/clientActions\";\nimport { GlobalState } from \"../reducers\";\nimport { ClientState } from \"../reducers/clientReducer\";\nimport { AppDispatch } from \"../store\";\nimport CreateIcon from \"@mui/icons-material/Create\";\n\ntype ClientsProps = {\n  dispatch: AppDispatch;\n  clients: ClientState;\n}\nconst Clients: React.FC<ClientsProps> = ({\n  dispatch,\n  clients,\n}) => {\n\n  useEffect(() => {\n    clientActions.getAll()(dispatch);\n  }, []);\n\n  if (clients.loading) {\n    return (\n      <CircularProgress />\n    );\n  }\n\n  if (clients.clients && clients.clients.length === 0) {\n    return <div>Aucun client</div>;\n  }\n\n  // TODO le mettre dans les alertes\n  if (clients.error) { \n    return <div>{clients.error}</div>;\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        aria-label=\"tableau des clients\"\n        sx={{\n          minWidth: 300\n        }}\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">ID.</TableCell>\n            <TableCell align=\"center\">Prénom</TableCell>\n            <TableCell align=\"center\">Nom</TableCell>\n            <TableCell align=\"center\">Ville</TableCell>\n            <TableCell align=\"center\">CP</TableCell>\n            <TableCell align=\"center\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {clients.clients && clients.clients.map(client => (\n            <TableRow\n              key={client.id}\n              sx={{\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              }}\n            >\n              <TableCell align=\"center\">{client.id}</TableCell>\n              <TableCell align=\"center\">{client.firstName}</TableCell>\n              <TableCell align=\"center\">{client.lastName}</TableCell>\n              <TableCell align=\"center\">{client.city}</TableCell>\n              <TableCell align=\"center\">{client.zipCode}</TableCell>\n              <TableCell align=\"center\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"Modifier\"\n                >\n                  <CreateIcon />\n                </IconButton>\n                <IconButton\n                  color=\"secondary\"\n                  aria-label=\"Supprimer\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { clients } = state;\n  return {\n    clients,\n  };\n};\n\nexport default connect(mapStateToProps)(Clients);\n","import { CircularProgress } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemActions } from \"../actions/itemActions\";\nimport { GlobalState } from \"../reducers\";\nimport { ItemState } from \"../reducers/itemReducer\";\nimport { AppDispatch } from \"../store\";\n\ninterface ItemProps {\n  dispatch: AppDispatch;\n  items: ItemState;\n}\nconst Items: React.FC<ItemProps> = ({\n  dispatch,\n  items,\n}) => {\n\n  useEffect(() => {\n    itemActions.getAll()(dispatch);\n  }, []);\n\n  if (items.loading) {\n    return (\n      <CircularProgress />\n    );\n  }\n\n  if (items.items && items.items.length === 0) {\n    return (\n      <div>Aucun objet</div>\n    );\n  }\n\n  return (\n    <></>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { items } = state;\n  return {\n    items,\n  };\n};\n\nexport default connect(mapStateToProps)(Items);\n","import { CircularProgress } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { itemActions } from \"../actions/itemActions\";\nimport { GlobalState } from \"../reducers\";\nimport { ItemState } from \"../reducers/itemReducer\";\nimport { AppDispatch } from \"../store\";\n\ninterface ItemPageParams {\n  id: string;\n}\ninterface ItemPageProps {\n  dispatch: AppDispatch;\n  items: ItemState;\n}\nconst ItemPage: React.FC<ItemPageProps> = ({\n  dispatch,\n  items,\n}) => {\n  const { id } = useParams<ItemPageParams>();\n  const itemId = parseInt(id, 10);\n\n  useEffect(() => {\n    itemActions.getItem(itemId)(dispatch);\n  }, []);\n\n  const item = items.items.find(i => i.ean === itemId);\n  \n  if (items.loading) {\n    return <CircularProgress />;\n  }\n    \n  if (!item) {\n    return <div>Objet non trouvé</div>;\n  }\n\n  return (\n    <div>\n      wip!\n      {item.ean}\n      {item.name}\n      {item.description}\n      {item.price} €\n      <img src={item.photo} alt={item.name} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { items } = state;\n  return {\n    items,\n  };\n};\n\nexport default connect(mapStateToProps)(ItemPage);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Alert, Snackbar\n} from \"@mui/material\";\nimport { \n  Route,\n  Switch,\n  Router,\n} from \"react-router-dom\";\nimport NavProvider from \"./components/NavProvider\";\nimport ColorModeProvider from \"./components/ColorModeProvider\";\nimport { connect } from \"react-redux\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { alertActions } from \"./actions/alertActions\";\nimport { GlobalState } from \"./reducers\";\nimport { history } from \"./browserHistory\";\nimport { AlertState } from \"./reducers/alertReducer\";\nimport { AppDispatch } from \"./store\";\nimport Landing from \"./components/Landing\";\nimport Clients from \"./components/Clients\";\nimport Items from \"./components/Items\";\nimport ItemPage from \"./components/ItemPage\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\n\n// TODO: utiliser les nested routes pour mieux gérer le layout\n\ntype AppProps = {\n  dispatch: AppDispatch;\n  alert: AlertState;\n};\nconst App: React.FC<AppProps> = ({ dispatch, alert }) => {\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  useEffect(() => {\n    setSnackbarOpen(alert.message.length > 0);\n  }, [alert]);\n\n  const handleClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  history.listen(() => {\n    dispatch(alertActions.clear());\n  });\n\n  return (\n    <ColorModeProvider>\n      <Router history={history}>\n        <NavProvider>\n          <Snackbar\n            open={snackbarOpen}\n            autoHideDuration={5000}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n            }}\n          >\n            <Alert\n              severity={alert.type}\n            >\n              {alert.message}\n            </Alert>\n          </Snackbar>\n          <Switch>\n            <Route\n              path=\"/\"\n              component={Landing}\n              exact\n            />\n            <Route\n              path=\"/login\"\n              component={Login} \n              exact\n            /> \n            <PrivateRoute\n              component={Dashboard}\n              path=\"/dashboard\"\n              exact\n            />\n            <PrivateRoute\n              component={Clients}\n              path=\"/clients\"\n              exact\n            />\n            <PrivateRoute\n              component={Items}\n              path=\"/items\"\n              exact\n            />\n            <PrivateRoute\n              component={ItemPage}\n              path=\"/items/:id\"\n              exact\n            />\n            <Route render={() => <div>404</div>} /> \n          </Switch>\n        </NavProvider>\n      </Router>\n    </ColorModeProvider>\n  );\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  const { alert } = state;\n  return { alert };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AlertColor } from \"@mui/material\";\nimport { AnyAction } from \"redux\";\nimport { ALERT_CLEAR, ALERT_ERROR, ALERT_SUCCESS } from \"../actions/types\";\n\nexport interface AlertState {\n  type: AlertColor;\n  message: string;\n}\n\nconst defaultAlertState: AlertState = {\n  type: \"info\",\n  message: \"\"\n};\nexport const alertReducer = (state: AlertState = defaultAlertState, action: AnyAction): AlertState => {\n  switch(action.type) {\n  case ALERT_SUCCESS:\n    return { type: \"success\", message: action.message };\n  case ALERT_ERROR:\n    return { type: \"error\", message: action.message };\n  case ALERT_CLEAR:\n    return { type: \"info\", message: \"\" };\n  default:\n    return state;\n  }\n};\n","import { AnyAction } from \"redux\";\nimport { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT } from \"../actions/types\";\nimport constants from \"../constants\";\nimport { User } from \"../services/authService\";\n\nexport interface UserState {\n  user?: User;\n  loggedIn?: boolean;\n  loggingIn?: boolean;\n}\n\nconst user: User = JSON.parse(\n  localStorage.getItem(constants.USER_LOCAL_STORAGE_KEY) ?? \"{}\"\n);\nconst initialState = Object.keys(user).length > 0 \n  ? { loggedIn: true, user }\n  : {};\n\nexport const authReducer = (state: UserState = initialState, action: AnyAction): UserState => {\n  switch (action.type) {\n  case LOGIN_REQUEST:\n    return { loggingIn: true, user: action.user };\n  case LOGIN_SUCCESS:\n    return { loggedIn: true, user: action.user };\n  case LOGIN_FAILURE:\n    return {};\n  case LOGOUT:\n    return {};\n  default:\n    return state;\n  }\n};\n","import { AnyAction } from \"redux\";\nimport {\n  ITEMS_GETALL_REQUEST,\n  ITEMS_GETALL_FAILURE,\n  ITEMS_GETALL_SUCCESS,\n  ITEMS_DELETE_SUCCESS,\n  ITEMS_DELETE_REQUEST,\n  ITEMS_DELETE_FAILURE,\n  ITEMS_ADD_REQUEST,\n  ITEMS_ADD_SUCCESS,\n  ITEMS_ADD_FAILURE,\n  ITEM_GET_REQUEST,\n  ITEM_GET_SUCCESS,\n  ITEM_GET_FAILURE\n} from \"../actions/types\";\nimport { Item } from \"../services/itemService\";\n\nexport interface ItemState {\n  loading: boolean;\n  items: Item[];\n  error?: string;\n}\n\nconst defaultItemState: ItemState = {\n  items: [],\n  loading: false,\n};\n\nexport const itemReducer = (state: ItemState = defaultItemState, action: AnyAction): ItemState => {\n  switch (action.type) {\n  case ITEMS_GETALL_REQUEST:\n    return { loading: true, items: [] };\n  case ITEMS_GETALL_SUCCESS:\n    return { loading: false, items: action.items };\n  case ITEMS_GETALL_FAILURE:\n    return { loading: false, items: state.items, error: action.error };\n  case ITEMS_DELETE_REQUEST:\n    return { loading: true, items: state.items };\n  case ITEMS_DELETE_SUCCESS:\n    return { loading: false, items: state.items.filter(item => item.ean !== action.itemId) };\n  case ITEMS_DELETE_FAILURE:\n    return { loading: false, items: state.items, error: action.error };\n  case ITEMS_ADD_REQUEST:\n    return { loading: true, items: state.items };\n  case ITEMS_ADD_SUCCESS:\n    return { loading: false, items: [...state.items, action.item] };\n  case ITEMS_ADD_FAILURE:\n    return { loading: false, items: state.items, error: action.error };\n  case ITEM_GET_REQUEST:\n    return { loading: true, items: state.items };\n  case ITEM_GET_SUCCESS:\n    return { loading: false, items: [action.item] };\n  case ITEM_GET_FAILURE:\n    return { loading: false, items: state.items, error: action.error };\n  default:\n    return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { alertReducer, AlertState } from \"./alertReducer\";\nimport { authReducer, UserState } from \"./authReducer\";\nimport { clientReducer, ClientState } from \"./clientReducer\";\nimport { itemReducer, ItemState } from \"./itemReducer\";\n\nexport interface GlobalState {\n  alert: AlertState;\n  auth: UserState;\n  clients: ClientState;\n  items: ItemState;\n}\nexport default combineReducers<GlobalState>({\n  alert: alertReducer,\n  auth: authReducer,\n  clients: clientReducer,\n  items: itemReducer,\n});\n","import { AnyAction } from \"redux\";\nimport {\n  CLIENTS_GETALL_FAILURE,\n  CLIENTS_GETALL_REQUEST,\n  CLIENTS_GETALL_SUCCESS\n} from \"../actions/types\";\nimport { Client } from \"../services/clientService\";\n\nexport interface ClientState {\n  loading?: boolean;\n  clients?: Client[];\n  error?: string;\n}\nexport const clientReducer = (state: ClientState = {}, action: AnyAction): ClientState => {\n  switch (action.type) {\n  case CLIENTS_GETALL_REQUEST:\n    return { loading: true };\n  case CLIENTS_GETALL_SUCCESS:\n    return { clients: action.clients };\n  case CLIENTS_GETALL_FAILURE:\n    return { error: action.error };\n  default:\n    return state;\n  }\n};\n","import { applyMiddleware, createStore } from \"redux\";\nimport baseReducer from \"../reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nexport const store = createStore(\n  baseReducer,\n  applyMiddleware(\n    thunkMiddleware,\n  )\n);\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}